<?php
    // ex1(); // простейшая функция которая делает одну операцию, в данном случае печатает текст
    // ex2(); // передача аргументов в функцию (определение параметров в функции)
    // ex3(); // необязательные параметры в функции (предопределенные параметры)
    // ex4(); // именованные параметры, можно передавать аргументы в функцию по имени а не позиционно
    // ex5(); // переменное количество аргументов (оператор ...)
    // ex6(); // распаковка элементов из массива для передачи их в функцию (оператор ...)
    // ex7(); // ещё один пример распаковки элементов из массива для передачи их в функцию (оператор ...)
    // ex8(); // сочетание обычных параметров функции и переменного количества параметров функции (оператор ...) | передавать все аргументы позиционным способом
    // ex9(); // возвращение значений оператор return
    // ex10(); // возвращение значений -> даже если функция не возвращает явных аргументов, она возвращает null (как в python None)

    // возвращение значений -> даже если функция не возвращает явных аргументов, она возвращает null (как в python None)
    function ex10(){
        function dummy(){

        }

        var_dump(dummy()); // как видно отсюда возвращаемый тип Null
    }

    // возвращение значений оператор return
    function ex9(){
        function summ($a, $b){
            return $a+$b;
        }

        $result = summ(2,4);
        echo "$result";
    }

    // сочетание обычных параметров функции и переменного количества параметров функции (оператор ...) | передавать все аргументы позиционным способом
    function ex8(){
        function sum_pow($pw, ...$numbers){
            $result = 0;

            // суммирование всех элементов массива $numbers
            foreach($numbers as $num){
                $result += $num;
            }

            // возведение суммы элементов в степень
            for ($i=1;$i<$pw; $i++){
                $result *= $result; 
            }
            echo "$result <br>";
        }

        sum_pow(2, ...[4, 3, 2]);
    }

    // ещё один пример распаковки элементов из массива для передачи их в функцию (оператор ...)
    function ex7(){
        /**
         * Как видно в примере ниже, можно в принципе передавать параметры из массива и в качестве позиционных
         * в примере ниже параметры возьмутся из массива $user, но функция принимает всего два аргумента, а
         * значит 3 элемент массива будет просто проигнорирован
         */
        function displayInfo($user, $age){
            echo "$user | $age";
        }

        $user = ["Ivan", 30, "Moscow"];
        displayInfo(...$user);
    }

    // распаковка элементов из массива для передачи их в функцию (оператор ...)
    function ex6(){
        function sum(...$numbers){
            $result = 0;
            foreach ($numbers as $num){
                $result += $num;
            }
            echo "Сумма: $result";
        }

        $numbers = [3,2,1];
        sum(...$numbers); // вот таким образом можно распаковать элементы превратив их в аргументы передаваемые в функции
    }

    // переменное количество аргументов (оператор ...)
    function ex5(){
        function mul(...$numbers){ // ... означает, что функция может принимать и произвольное число аргументов
            $result = 1;
            foreach($numbers as $val){
                $result = $val * $result;
            }
            echo $result;
        }

        mul(5,4,3,2,1); // то есть здесь можно передать сколько угодно аргументов
    }

    // именованные параметры, можно передавать аргументы в функцию по имени а не позиционно
    function ex4(){
        function displayInfo($name, $age){
            echo "Пользователь $name | возраст $age";
        }

        // с php версии 8+ можно передавать параметры по имени в произвольном порядке а не позиционно как это было раньше
        displayInfo(age:30, name : "Ivan");
    }

    // необязательные параметры в функции (предопределенные параметры)
    function ex3(){
        // в функции можно предопределить параметр и тогда его не требуется вводить при вызове функции
        function greeteng_user($name, $city="неизвестный"){
            echo "Привет, $name!<br>Из города $city";
        }

        greeteng_user($name = "Ivan");
    }

    // передача аргументов в функцию 
    function ex2(){
        function print_msg($msg){ // функция принимает параметр $msg
            echo "$msg<br>"; // функция печатает этот параметр
        }

        print_msg(msg: "Test message, print screen!"); // вызов функции с передачей параметра msg
    }

    // простейшая функция которая делает одну операцию, в данном случае печатает текст
    function ex1(){
        $name = "Ivan";
        $text = <<<EOD
        Это многострочный текст.
        Можно использовать переменные, например: $name.
        Переносы строк сохраняются автоматически.
        EOD;

        echo $text;
    };






