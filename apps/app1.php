<?php
    /*
    Задача: написать калькулятор мебели, расчёт корпусного шкафа, на основании 
    цены за 1 метр квадратный.
    --------------------------------------------------------------------------------------
    На вход принимаем параметры: 
        размеры (ширина, глубина, высота) все в integer, 
        количество полок integer, 
        задняя стенка усиленная (если да то это доп цена к прайсу) bool,
        название цвета string.
    На выходе получаем результат:
        Название шкафа с параметрами, цена за шкаф
    --------------------------------------------------------------------------------------
    Калькулятор должен проверять входные данные на корректность: размеры должны задаваться в см.,
    установить максимально допустимые габариты.
    --------------------------------------------------------------------------------------
    Цены на материалы реализовать в виде констант
    --------------------------------------------------------------------------------------
    ООП ещё пока не пройден, поэтому реализовать на функциональном программировании
    Упрощения пусть это будет простой классический одностворчатый шкаф без стеклянных дверей (полностью из ЛДСП)
    Более сложные примеры будут после прохождения ООП
    --------------------------------------------------------------------------------------
    */

    // объявление константы с правилами (допустимые размеры, прайс и так далее)
    define('RULES', [
            // допустимые размеры шкафа для проверки:
            "gabarits" => [
                "width" => ["min" => 25, "max" => 90],
                "depth" => ["min" => 25, "max" => 80],
                "height" => ["min" => 50, "max" => 240],
            ],
            // цены за 1 метр квадратный:
            "price" => [
                "французский орех" => [
                    // цена за метр квадратный задаётся диапазонами (произвольным набором диапазонов, что позволяет добавлять цены динамически)
                    // если площадь вышла за пределы массива, то цена возьмется из последнего диапазона, порядок диапазонов имеет значение от меньшего к большему
                    "ranges" =>[
                        ["min" => 0, "max" => 1, "price" => 3100],
                        ["min" => 1, "max" => 2, "price" => 2500],
                        ["min" => 4, "max" => 6, "price" => 2200],
                    ]
                ],
                "белый" => [
                    // цена за метр квадратный задаётся диапазонами (произвольным набором диапазонов, что позволяет добавлять цены динамически)
                    // если площадь вышла за пределы массива, то цена возьмется из последнего диапазона, порядок диапазонов имеет значение от меньшего к большему
                    "ranges" =>[
                        ["min" => 0, "max" => 1, "price" => 8000],
                        ["min" => 1, "max" => 2, "price" => 7000],
                        ["min" => 4, "max" => 6, "price" => 6000],
                    ]
                ],
            ]
        ]
    );



    function wardrobeCalc($width, $depth, $height=200,$decor="французский орех",$shelfs=2,$doors = true, $backwall=false){
        // "глобальные" переменные внутри функции
        $area = 0; // подсчёт площади изделия в метрах квадратных

        //========== ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ И МЕТОДЫ ========================
        // проверка входных параметров, функция ни чего не возвращает а лишь вызывает исключение в случае некорректных входных данных
        $checkParametrs = function () use($width,$depth,$height,$decor,$shelfs,$doors,$backwall){
            
            // 1 проверка правильности типов габаритов, что указаны именно числа (или число в строковом представлении)
            foreach([$width, $depth, $height] as $gab){
                if (!(is_int($gab)) && !(is_float($gab)) &&!(is_numeric($gab)) ){
                    throw new Exception("Неправильные габариты изделия, они должны быть int|float, а не $gab");
                }
            }

            // 2. Проверка габаритов на разрешенные размеры
            function checkGabarit($rulesKey, $checkParametr){
                if (!( (RULES["gabarits"][$rulesKey]["min"]<=$checkParametr) && ($checkParametr<=RULES["gabarits"][$rulesKey]["max"]))){
                    throw new Exception("выход за пределы габарита, параметр '$rulesKey' [$checkParametr], должен входить в дипазон 
                    ".RULES["gabarits"][$rulesKey]["min"].":".RULES["gabarits"][$rulesKey]["max"]);
                }
            }

            // проверяем что габариты входят в разрешенные диапазоны
            checkGabarit(rulesKey: "width", checkParametr: $width);
            checkGabarit(rulesKey: "depth", checkParametr: $depth);
            checkGabarit(rulesKey: "height", checkParametr: $height);

            // 3. проверка, что в качестве декора передан правильный тип
            if (!(is_string($decor))){
                throw new Exception("входной декор должен быть строкой а не $decor");
            }; 

            // 4. проверка что декор есть в прайс-листе
            $decorList = array_keys(RULES["price"]);
            if (!(in_array($decor, $decorList))){
                throw new Exception("Декор '$decor' отсутствует в прайс-листе");
            };

            // 5. проверка типа количества полок
            if (!(is_integer($shelfs))){
                throw new Exception("количество полок должно быть задано целым числом int а не $shelfs");
            }
            
            // 6. Проверка галочек doors и backwall
            if (!(is_bool($doors) && is_bool($backwall))){
                throw new Exception("опциональные параметры doors и backwal должны быть bool");
            };
        };

        // получение наименования изделия (вычисляемое)
        $getName = function() use($width, $depth, $height, $decor, $shelfs, $doors, $backwall){
            $sizeTypeWidth = ($width<=45) ? "узкий" : ""; // если шкаф узкий добавим это в описание
            $sizeTypeHeight = ($height<=110) ? "низкий" : ((110<$height && $height<170)? "средний" : "высокий");
            $name = $doors==true?"Шкаф":"Стеллаж"; // тип изделия, если нет дверей то это стеллаж
            $name = "$name $sizeTypeHeight $sizeTypeWidth, "; // описание типа размера
            $name = "$name $width*$depth*$height, "; // габариты
            $name = "$name $decor"; // цвет изделия
            ($backwall==true)? $name = "$name (задняя стенка ЛДСП)": ""; // добавить примечание (усиленная задняя стенка)
            return $name;
        };

        // расчёт площади деталей
        $calcDetails = function($a,$b,$count=1) use(& $area){
            $area+= ($a/100*$b/100) * $count;
        };

        //========== START =====================================

        $checkParametrs(); // 1. Проверяем параметры
        $name = $getName(); // 2. Получаем имя изделия

        // расчёт изделия на основании цены из прайса (умножаем метры квадратные на цену за метр квадратный)
        function calcPriceByArea($area, $decor){
            foreach(RULES["price"][$decor]["ranges"] as $range){
                if (( $range["min"]<$area ) && ( $area <= $range["max"] )){
                    return $area * $range["price"]; // найден ценовой диапазон, готово
                }
            }
            // если диапазон не был найден, то берем значение из последнего ranges
            $lastRange = count(RULES["price"][$decor]["ranges"])-1;
            return $area * RULES["price"][$decor]["ranges"][$lastRange]["price"];
        }


        // 1. Расчитываем площади деталей
        $calcDetails(a:$width, b: $depth, count: $count=2 + $shelfs); // расчёт полок + дно и крышка шкафа
        $calcDetails(a:$depth, b: $height, count: 2); // расчёт боковин шкафа
        if ($doors) $calcDetails(a:$width, b: $height); // фасады шкафа
        if ($backwall) $calcDetails(a: $width, b: $height); // задняя стенка шкафа
        
        $price = calcPriceByArea(area: $area, decor: $decor);
        $price = number_format($price, 0,""," "); // переводим прайс в строку в удобочитабельный формат
        return "$name. С/с: $price руб./шт."; // возвращаем название изделия с ценой

    }


    try{
        $res = wardrobeCalc(
            width:80,depth:38, // габариты шкафа
            decor: "белый",
            shelfs: 6, // опционально изменить количество полок
            doors:true, backwall: true // опциональные параметры сделать шкаф без дверей, с усиленной задней стенкой
        );
        echo $res;
    }catch(Exception $e){
        echo "<p class='error'>";
        echo $e->getMessage();
        echo "</p>";
    }